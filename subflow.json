{
	"id": "998ca7fbf9a4874e",
	"type": "ui_tab",
	"name": "S1Seven API node",
	"icon": "dashboard",
	"disabled": false,
	"hidden": false,
	"flow": [
		{
			"id": "7531a3b79d4f3c87",
			"type": "subflow",
			"name": "S1Seven API",
			"info": "",
			"category": "network",
			"in": [
				{
					"x": 160,
					"y": 320,
					"wires": [
						{
							"id": "63eff95e681cd331"
						}
					]
				}
			],
			"out": [
				{
					"x": 1220,
					"y": 500,
					"wires": [
						{
							"id": "ed28d7f19e1869a7",
							"port": 0
						}
					]
				}
			],
			"env": [],
			"meta": {
				"module": "S1Seven API",
				"author": "eamon@s1seven.com",
				"desc": "A subflow that creates a UI, allowing API paramaters to be input, and allows the user to interact with the S1Seven API without much technical knowledge.",
				"keywords": "s1seven, api"
			},
			"color": "#307fe2"
		},
		{
			"id": "1ff2412a6e7262cb",
			"type": "debug",
			"z": "7531a3b79d4f3c87",
			"name": "",
			"active": true,
			"tosidebar": true,
			"console": false,
			"tostatus": false,
			"complete": "false",
			"statusVal": "",
			"statusType": "auto",
			"x": 1010,
			"y": 80,
			"wires": []
		},
		{
			"id": "6f101f6eb4054287",
			"type": "ui_form",
			"z": "7531a3b79d4f3c87",
			"name": "",
			"label": "Add access token and company id",
			"group": "06fcee6ae387d692",
			"order": 2,
			"width": 0,
			"height": 0,
			"options": [
				{
					"label": "Access token",
					"value": "accessToken",
					"type": "text",
					"required": true,
					"rows": null
				},
				{
					"label": "Company Id",
					"value": "company",
					"type": "text",
					"required": true,
					"rows": null
				}
			],
			"formValue": {
				"accessToken": "",
				"company": ""
			},
			"payload": "",
			"submit": "submit",
			"cancel": "cancel",
			"topic": "topic",
			"topicType": "msg",
			"splitLayout": "",
			"className": "",
			"x": 480,
			"y": 140,
			"wires": [["b14887b3e8d532f2"]]
		},
		{
			"id": "b14887b3e8d532f2",
			"type": "function",
			"z": "7531a3b79d4f3c87",
			"name": "Set min and max globally",
			"func": "if (msg.payload) {\n    global.set('accessToken', msg.payload.accessToken);\n    global.set('company', msg.payload.company);\n}\n\nreturn msg;",
			"outputs": 1,
			"noerr": 0,
			"initialize": "",
			"finalize": "",
			"libs": [],
			"x": 770,
			"y": 140,
			"wires": [["1ff2412a6e7262cb", "85959298bcf66951"]]
		},
		{
			"id": "85959298bcf66951",
			"type": "function",
			"z": "7531a3b79d4f3c87",
			"name": "Display values ",
			"func": "msg.payload.accessToken = global.get('accessToken');\nmsg.payload.company = global.get('company');\n\nreturn msg;",
			"outputs": 1,
			"noerr": 0,
			"initialize": "",
			"finalize": "",
			"libs": [],
			"x": 220,
			"y": 140,
			"wires": [["6f101f6eb4054287"]]
		},
		{
			"id": "2d64e8fb37e13b51",
			"type": "ui_upload",
			"z": "7531a3b79d4f3c87",
			"group": "06fcee6ae387d692",
			"title": "upload",
			"name": "",
			"order": 3,
			"width": 0,
			"height": 5,
			"chunk": 256,
			"transfer": "binary",
			"x": 190,
			"y": 80,
			"wires": [["9a54849664352049"]]
		},
		{
			"id": "774bc01c03af5dce",
			"type": "function",
			"z": "7531a3b79d4f3c87",
			"name": "Allow access to certificate globally",
			"func": "global.set('certificate', msg.payload);\nreturn msg;",
			"outputs": 1,
			"noerr": 0,
			"initialize": "",
			"finalize": "",
			"libs": [],
			"x": 560,
			"y": 80,
			"wires": [["1ff2412a6e7262cb"]]
		},
		{
			"id": "9a54849664352049",
			"type": "json",
			"z": "7531a3b79d4f3c87",
			"name": "",
			"property": "payload",
			"action": "",
			"pretty": false,
			"x": 330,
			"y": 80,
			"wires": [["774bc01c03af5dce"]]
		},
		{
			"id": "43348fcc86c23fd0",
			"type": "ui_dropdown",
			"z": "7531a3b79d4f3c87",
			"name": "",
			"label": "What would you like to do?",
			"tooltip": "",
			"place": "Select option",
			"group": "06fcee6ae387d692",
			"order": 0,
			"width": 0,
			"height": 0,
			"passthru": true,
			"multiple": false,
			"options": [
				{
					"label": "Notarize a certificate",
					"value": "notarize",
					"type": "str"
				},
				{
					"label": "Verify a certificate",
					"value": "verify",
					"type": "str"
				},
				{
					"label": "Hash a certificate",
					"value": "hash",
					"type": "str"
				}
			],
			"payload": "",
			"topic": "topic",
			"topicType": "msg",
			"className": "",
			"x": 260,
			"y": 220,
			"wires": [["cd8e3cbf36874637"]]
		},
		{
			"id": "0879afd8ed6249c0",
			"type": "debug",
			"z": "7531a3b79d4f3c87",
			"name": "",
			"active": true,
			"tosidebar": true,
			"console": false,
			"tostatus": false,
			"complete": "true",
			"targetType": "full",
			"statusVal": "",
			"statusType": "auto",
			"x": 630,
			"y": 220,
			"wires": []
		},
		{
			"id": "cd8e3cbf36874637",
			"type": "function",
			"z": "7531a3b79d4f3c87",
			"name": "",
			"func": "global.set('transactionType', msg.payload);\nreturn msg;",
			"outputs": 1,
			"noerr": 0,
			"initialize": "",
			"finalize": "",
			"libs": [],
			"x": 480,
			"y": 220,
			"wires": [["0879afd8ed6249c0"]]
		},
		{
			"id": "63eff95e681cd331",
			"type": "function",
			"z": "7531a3b79d4f3c87",
			"name": "Set access token header",
			"func": "const accessToken = global.get('accessToken');\nconst company = global.get('company');\n\nif (accessToken) {\n    msg.headers = {\n        Authorization: `Bearer ${accessToken}`,\n    }\n} else {\n    node.warn('No access token, please add one via the UI');\n}\n\nif (company) {\n    msg.headers = Object.assign(msg.headers, {\n        company: company,\n    })\n    return msg;\n} else {\n    node.warn('No company available, please add one via the UI');\n}\n\n\n",
			"outputs": 1,
			"noerr": 0,
			"initialize": "",
			"finalize": "",
			"libs": [],
			"x": 350,
			"y": 320,
			"wires": [["9acf25284f483363"]]
		},
		{
			"id": "9acf25284f483363",
			"type": "function",
			"z": "7531a3b79d4f3c87",
			"name": "Get identity from global",
			"func": "const identity = global.get('identity');\nmsg.identity = identity;\nreturn msg;\n",
			"outputs": 1,
			"noerr": 0,
			"initialize": "",
			"finalize": "",
			"libs": [],
			"x": 610,
			"y": 320,
			"wires": [["a51725fbc8d3bceb"]]
		},
		{
			"id": "87514257d39fa363",
			"type": "switch",
			"z": "7531a3b79d4f3c87",
			"name": "",
			"property": "identity",
			"propertyType": "msg",
			"rules": [
				{
					"t": "null"
				},
				{
					"t": "nnull"
				}
			],
			"checkall": "true",
			"repair": false,
			"outputs": 2,
			"x": 290,
			"y": 400,
			"wires": [["c9e07c3d987b9595"], ["6b791f84abf6a16f"]]
		},
		{
			"id": "2b6d0faf96edff6d",
			"type": "function",
			"z": "7531a3b79d4f3c87",
			"name": "Set global.identity to identity",
			"func": "if (Array.isArray(msg.payload) && msg.payload[0].id) {\n    global.set('identity', msg.payload[0].id);\n    msg.identity = msg.payload[0].id;\n} else if (msg.statusCode === 401) {\n    node.warn('Please ensure your access token is valid')\n} else if (msg.statusCode !== 200) {\n    node.warn('Something went wrong. Is your company id valid?')\n}\n\nreturn msg;",
			"outputs": 1,
			"noerr": 0,
			"initialize": "",
			"finalize": "",
			"libs": [],
			"x": 880,
			"y": 400,
			"wires": [["6b791f84abf6a16f"]]
		},
		{
			"id": "d599ed45dc9caf64",
			"type": "json",
			"z": "7531a3b79d4f3c87",
			"name": "",
			"property": "payload",
			"action": "",
			"pretty": false,
			"x": 670,
			"y": 400,
			"wires": [["2b6d0faf96edff6d"]]
		},
		{
			"id": "c9e07c3d987b9595",
			"type": "http request",
			"z": "7531a3b79d4f3c87",
			"name": "",
			"method": "GET",
			"ret": "txt",
			"paytoqs": "ignore",
			"url": "http://app.s1seven.ovh/api/identities?mode=test",
			"tls": "",
			"persist": false,
			"proxy": "",
			"authType": "",
			"senderr": false,
			"x": 510,
			"y": 400,
			"wires": [["d599ed45dc9caf64"]]
		},
		{
			"id": "a51725fbc8d3bceb",
			"type": "function",
			"z": "7531a3b79d4f3c87",
			"name": "Set interaction type",
			"func": "msg.transactionType = global.get(\"transactionType\");\nconst identity = msg.identity;\n\nif (!msg.transactionType) {\n    node.warn(\"Please choose an API interaction via the UI\");\n} else {\n    if (msg.transactionType === 'verify') {\n        msg.url = 'https://app.s1seven.ovh/api/certificates/verify?mode=test';\n    } else if (msg.transactionType === 'notarize') {\n        msg.url = `https://app.s1seven.ovh/api/certificates/notarize?identity=${identity}&mode=test`\n    } else if (msg.transactionType === 'hash') {\n        msg.url = 'https://app.s1seven.ovh/api/certificates/hash';\n    } else {\n        node.warn('Please choose an option from the list in the UI');\n    }\n    return msg;    \n}\n",
			"outputs": 1,
			"noerr": 0,
			"initialize": "",
			"finalize": "",
			"libs": [],
			"x": 850,
			"y": 320,
			"wires": [["87514257d39fa363"]]
		},
		{
			"id": "662369fcb661388d",
			"type": "http request",
			"z": "7531a3b79d4f3c87",
			"name": "",
			"method": "POST",
			"ret": "txt",
			"paytoqs": "ignore",
			"url": "",
			"tls": "",
			"persist": false,
			"proxy": "",
			"authType": "",
			"senderr": false,
			"x": 950,
			"y": 500,
			"wires": [["ed28d7f19e1869a7"]]
		},
		{
			"id": "6b791f84abf6a16f",
			"type": "function",
			"z": "7531a3b79d4f3c87",
			"name": "Get certificate",
			"func": "const certificate = global.get('certificate');\nif (certificate) {\n    msg.payload = certificate;\n    return msg;\n} else {\n    node.warn('No certificate found, please upload a JSON certificate via the UI');\n}\n",
			"outputs": 1,
			"noerr": 0,
			"initialize": "",
			"finalize": "",
			"libs": [],
			"x": 740,
			"y": 500,
			"wires": [["662369fcb661388d"]]
		},
		{
			"id": "ed28d7f19e1869a7",
			"type": "json",
			"z": "7531a3b79d4f3c87",
			"name": "",
			"property": "payload",
			"action": "",
			"pretty": false,
			"x": 1110,
			"y": 500,
			"wires": [[]]
		},
		{
			"id": "804d3b787a34f420",
			"type": "catch",
			"z": "7531a3b79d4f3c87",
			"name": "",
			"scope": null,
			"uncaught": false,
			"x": 200,
			"y": 600,
			"wires": [["d12169bb04dedcc4"]]
		},
		{
			"id": "d12169bb04dedcc4",
			"type": "debug",
			"z": "7531a3b79d4f3c87",
			"name": "",
			"active": true,
			"tosidebar": true,
			"console": false,
			"tostatus": false,
			"complete": "error",
			"targetType": "msg",
			"statusVal": "",
			"statusType": "auto",
			"x": 360,
			"y": 600,
			"wires": []
		},
		{
			"id": "06fcee6ae387d692",
			"type": "ui_group",
			"name": "API input",
			"tab": "998ca7fbf9a4874e",
			"order": 1,
			"disp": true,
			"width": "10",
			"collapse": false,
			"className": ""
		}
	]
}
